server_port = 7666
admin_http_port = 7667
admin_timeseries = true

log {
  filename = "/var/log/haplocheirus/production.log"
  level = "info"
  roll = "hourly"
  throttle_period_msec = 60000
  throttle_rate = 10
}

nameserver_db {
  username = "twitteradmin"
  password = "rcycW2ytto"
  query_timeout_default = 15000

  connection_pool {
    max_wait = 100
    min_evictable_idle_msec = -1
    size_max = 1
    size_min = 1
    test_idle_msec = 1000
    test_on_borrow = false

    timeout {
      initialize = 1000
      open = 500
      pool_size = 10
      queue_size = 10000
    }
  }

  disable {
    error_count = 100
    seconds = 60
  }
}

nameservers {
  mapping = "fnv1a-64"

  replicas {
    ns1 (inherit="nameserver_db") {
      hostname = "sjc1r177"
      database = "haplo_production"
    }

    ns2 (inherit="nameserver_db") {
      hostname = "sjc1r178"
      database = "haplo_production"
    }
  }
}

gizzard_services {
  name = "haplocheirus"
  shard_server_port = 7668
  job_server_port = 7669
  min_threads = 100
  client_timeout_msec = 15000
  idle_timeout_sec = 300
}

replication_pool {
  pool_size = 100
  max_pool_size = 100
  keep_alive_time_seconds = 5
  timeout_seconds = 6
}

service_pool {
  pool_size = 100
  max_pool_size = 100
  keep_alive_time_seconds = 5
  timeout_seconds = 6
}

redis {
  read {
    pool_size = 1
    pool_timeout_msec = 5000

    # max outstanding redis write operations
    pipeline = 100

    # operation timeout
    timeout_msec = 200
    keys_timeout_msec = 5000

    # expiration on timelines
    expiration_hours = 504 # 21 days
  }

  write {
    pool_size = 1
    pool_timeout_msec = 5000

    # max outstanding redis write operations
    pipeline = 100

    # operation timeout
    timeout_msec = 200
    keys_timeout_msec = 5000

    # expiration on timelines
    expiration_hours = 504 # 21 days
  }

  range_query_page_size = 20
}

timeline_trim {
  default = [ 800, 850 ]
}

queue {
  path = "/var/spool/kestrel"
  write {
    job_queue = "haplo_jobs"
    error_queue = "haplo_errors"
    threads = 64
    error_limit = 100
    replay_interval = 60
  }
  copy {
    job_queue = "haplo_copy_jobs"
    error_queue = "haplo_copy_errors"
    threads = 10
    error_limit = 100
    replay_interval = 900
  }
}
